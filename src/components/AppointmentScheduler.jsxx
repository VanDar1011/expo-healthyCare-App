import React, { useState } from "react";
import {
  View,
  Text,
  Button,
  StyleSheet,
  TouchableOpacity,
  Alert,
} from "react-native";
import Icon from "react-native-vector-icons/Ionicons";
import DateTimePicker from "@react-native-community/datetimepicker";

const AppointmentScheduler = () => {
  const [date, setDate] = useState(new Date());
  const [startTime, setStartTime] = useState(new Date());
  const [endTime, setEndTime] = useState(new Date());
  const [mode, setMode] = useState("date");
  const [show, setShow] = useState(false);
  const [pickerType, setPickerType] = useState("");

  const onChange = (event, selectedDate) => {
    const currentDate = selectedDate || date;

    if (pickerType === "date") {
      if (currentDate < new Date()) {
        Alert.alert("Lỗi", "Ngày không thể nhỏ hơn ngày hiện tại!");
        return;
      }
      setDate(currentDate);
    } else if (pickerType === "startTime") {
      setStartTime(currentDate);
      if (endTime < currentDate) {
        Alert.alert("Lỗi", "Giờ bắt đầu phải nhỏ hơn giờ kết thúc!");
      }
    } else if (pickerType === "endTime") {
      if (currentDate <= startTime) {
        Alert.alert("Lỗi", "Giờ kết thúc phải lớn hơn giờ bắt đầu!");
        return;
      }
      setEndTime(currentDate);
    }

    setShow(false);
  };

  const showMode = (currentMode, type) => {
    setShow(true);
    setMode(currentMode);
    setPickerType(type);
  };

  const getButtonStyle = (type) => {
    return {
      ...styles.button,
      backgroundColor: pickerType === type ? "#0056b3" : "#007BFF", // Sáng hơn khi đang chọn
    };
  };

  return (
    <View style={styles.container}>
      <View style={styles.header}>
        <Icon name="calendar" size={30} color="#000" />
        <Text style={styles.title}>Appointment</Text>
      </View>

      <TouchableOpacity
        style={getButtonStyle("date")}
        onPress={() => showMode("date", "date")}
      >
        <Text style={styles.buttonText}>Chọn Ngày</Text>
      </TouchableOpacity>

      <TouchableOpacity
        style={getButtonStyle("startTime")}
        onPress={() => showMode("time", "startTime")}
      >
        <Text style={styles.buttonText}>Chọn Giờ Bắt Đầu</Text>
      </TouchableOpacity>

      <TouchableOpacity
        style={getButtonStyle("endTime")}
        onPress={() => showMode("time", "endTime")}
      >
        <Text style={styles.buttonText}>Chọn Giờ Kết Thúc</Text>
      </TouchableOpacity>

      {show && (
        <View style={styles.pickerContainer}>
          <DateTimePicker
            value={
              pickerType === "date"
                ? date
                : pickerType === "startTime"
                ? startTime
                : endTime
            }
            mode={mode}
            is24Hour={true}
            display="default"
            onChange={onChange}
          />
        </View>
      )}

      <View style={styles.dateContainer}>
        <Text style={styles.dateText}>Ngày: {date.toLocaleDateString()}</Text>
      </View>

      <View style={styles.timeContainer}>
        <Text style={styles.timeText}>
          Giờ Bắt Đầu: {startTime.toLocaleTimeString()}
        </Text>
        <Text style={styles.timeText}>
          Giờ Kết Thúc: {endTime.toLocaleTimeString()}
        </Text>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    backgroundColor: "#f9f9f9",
  },
  title: {
    fontSize: 24,
    fontWeight: "bold",
    textAlign: "center",
    marginBottom: 20,
    color: "#333",
  },
  button: {
    borderRadius: 8,
    paddingVertical: 15,
    paddingHorizontal: 20,
    marginVertical: 10,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  buttonText: {
    color: "#FFFFFF",
    fontSize: 18,
    fontWeight: "bold",
    textAlign: "center",
  },
  dateText: {
    fontSize: 18,
    color: "#333",
  },
  timeText: {
    fontSize: 18,
    color: "#333",
  },
  dateContainer: {
    marginVertical: 10,
  },
  timeContainer: {
    flexDirection: "row",
    justifyContent: "space-between",
    marginVertical: 10,
  },
  header: {
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "flex-start",
    columnGap: 10,
  },
  pickerContainer: {
    backgroundColor: "#fff",
    borderRadius: 8,
    padding: 10,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
    justifyContent: "center",
    alignItems: "center",
  },
});

export default AppointmentScheduler;
